{
  "info": {
    "_postman_id": "b3fbffaf-de1e-4388-b854-913cabec2f73",
    "name": "User Tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Sign Up Random User",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status Code of 201 Created\", () => {",
              "    pm.response.to.have.status(201);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "pm.environment.set(\"name\", pm.variables.replaceIn(\"{{$randomFullName}}\"))",
              "pm.environment.set(\"password\", pm.variables.replaceIn(\"{{$randomPassword}}\"))",
              "pm.environment.set(\"email\", pm.variables.replaceIn(\"{{$randomEmail}}\"))",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"{{name}}\",\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\"\n}\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/signup",
          "host": ["{{baseUrl}}"],
          "path": ["signup"]
        }
      },
      "response": []
    },
    {
      "name": "Sign Up Same User",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status Code of 400 Bad Request\", () => {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "const response = pm.response.json();",
              "",
              "pm.test(\"Correct error message.\", () => {",
              "    pm.expect(response.error).to.eql(\"Username or email already exists.\");",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"{{name}}\",\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\"\n}\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/signup",
          "host": ["{{baseUrl}}"],
          "path": ["signup"]
        }
      },
      "response": []
    },
    {
      "name": "Sign Up Short Username",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status Code of 400 Bad Request\", () => {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "const response = pm.response.json();",
              "",
              "pm.test(\"Correct error message.\", () => {",
              "    pm.expect(response.error).to.eql(\"Username too short.\");",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"x\",\n    \"email\": \"example@abc.com\",\n    \"password\": \"abcdefGHI5678\"\n}\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/signup",
          "host": ["{{baseUrl}}"],
          "path": ["signup"]
        }
      },
      "response": []
    },
    {
      "name": "Sign Up Short Password",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status Code of 400 Bad Request\", () => {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "const response = pm.response.json();",
              "",
              "pm.test(\"Correct error message.\", () => {",
              "    pm.expect(response.error).to.eql(\"Password too short.\");",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"xxxxxxxxxxxxxx\",\n    \"email\": \"example@abc.com\",\n    \"password\": \"x\"\n}\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/signup",
          "host": ["{{baseUrl}}"],
          "path": ["signup"]
        }
      },
      "response": []
    },
    {
      "name": "Sign Up Bad Email",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status Code of 400 Bad Request\", () => {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "const response = pm.response.json();",
              "",
              "pm.test(\"Correct error message.\", () => {",
              "    pm.expect(response.error).to.eql(\"Email is not a valid address.\");",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"xxxxxxxxxxxxxx\",\n    \"email\": \"exampleabc.com\",\n    \"password\": \"xxXXXXXXXXXx21451525\"\n}\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/signup",
          "host": ["{{baseUrl}}"],
          "path": ["signup"]
        }
      },
      "response": []
    },
    {
      "name": "Login Correct",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status Code of 201 Created\", () => {",
              "    pm.response.to.have.status(201);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"{{name}}\",\n    \"password\": \"{{password}}\"\n}\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/login",
          "host": ["{{baseUrl}}"],
          "path": ["login"]
        }
      },
      "response": []
    },
    {
      "name": "Login Correct Invalid",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status Code of 400 Bad Request\", () => {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "const response = pm.response.json();",
              "",
              "pm.test(\"Correct error message.\", () => {",
              "    pm.expect(response.error).to.eql(\"Username and password do not match.\");",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"{{name}}\",\n    \"password\": \"xxxxxx\"\n}\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/login",
          "host": ["{{baseUrl}}"],
          "path": ["login"]
        }
      },
      "response": []
    },
    {
      "name": "Get Own User",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status Code of 200 OK\", () => {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "const response = pm.response.json();",
              "",
              "pm.test(\"Correct username.\", () => {",
              "    pm.expect(response.name).to.eql(pm.environment.get(\"name\"));",
              "});",
              "",
              "pm.test(\"Correct email.\", () => {",
              "    pm.expect(response.email).to.eql(pm.environment.get(\"email\"));",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl}}/own_user",
          "host": ["{{baseUrl}}"],
          "path": ["own_user"]
        }
      },
      "response": []
    },
    {
      "name": "Valid User Exists by Name",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status Code of 200 OK\", () => {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "const response = pm.response.json();",
              "",
              "pm.test(\"Correct return value: 'true'.\", () => {",
              "    pm.expect(response.exists).to.eql(true);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/user_exists/:name/:email",
          "host": ["{{baseUrl}}"],
          "path": ["user_exists", ":name", ":email"],
          "variable": [
            {
              "key": "name",
              "value": "{{name}}"
            },
            {
              "key": "email",
              "value": null
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Valid User Exists by Email",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status Code of 200 OK\", () => {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "const response = pm.response.json();",
              "",
              "pm.test(\"Correct return value: 'true'.\", () => {",
              "    pm.expect(response.exists).to.eql(true);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/user_exists/:name/:email",
          "host": ["{{baseUrl}}"],
          "path": ["user_exists", ":name", ":email"],
          "variable": [
            {
              "key": "name",
              "value": null
            },
            {
              "key": "email",
              "value": "{{email}}"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Invalid User Does Not Exist",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status Code of 200 OK\", () => {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "const response = pm.response.json();",
              "",
              "pm.test(\"Correct return value: 'true'.\", () => {",
              "    pm.expect(response.exists).to.eql(false);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/user_exists/:name/:email",
          "host": ["{{baseUrl}}"],
          "path": ["user_exists", ":name", ":email"],
          "variable": [
            {
              "key": "name",
              "value": null
            },
            {
              "key": "email",
              "value": null
            }
          ]
        }
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080/api/v1"
    }
  ]
}
